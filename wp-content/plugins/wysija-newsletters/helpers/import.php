<?php
defined('WYSIJA') or die('Restricted access'); class WYSIJA_help_import extends WYSIJA_object{ function WYSIJA_help_import(){ } function getPluginsInfo(){ $pluginsTest=array( 'newsletter'=>array( "name"=>"Newsletter Pro(Satollo)", "pk"=>"id", "matches"=>array("name"=>"firstname","email"=>"email","surname"=>"lastname","ip"=>"ip"), "where"=>array("status"=>"S") ), 'wpmlsubscribers'=>array( "name"=>"WordPress Newsletter Plugin(Tribulant)", "pk"=>"id", "matches"=>array("email"=>"email","ip_address"=>"ip"), "where"=>array("registered"=>"Y") ) ); return $pluginsTest; } function testPlugins(){ $modelWysija=new WYSIJA_model(); $possibleImport=array(); foreach($this->getPluginsInfo() as $tableName =>$pluginInfos){ $result=$modelWysija->query("SHOW TABLES like '".$modelWysija->wpprefix.$tableName."';"); if($result){ $where=$this->generateWhere($pluginInfos); $result=$modelWysija->query("get_row", "SELECT COUNT(`".$pluginInfos['pk']."`) as total FROM `".$modelWysija->wpprefix.$tableName."` ".$where." ;", ARRAY_A); if((int)$result['total']>0){ $pluginInfos['total']=(int)$result['total']; $possibleImport[$tableName]=$pluginInfos; } } } if($possibleImport){ $modelConfig=&WYSIJA::get("config","model"); $modelConfig->save(array("pluginsImportable"=>$possibleImport)); } } function import($tablename,$plugInfo,$issyncwp=false,$ismainsite=true){ global $wpdb; $model=&WYSIJA::get("list","model"); if($issyncwp) $listname="<b><i>".__("Synched",WYSIJA)."</i></b> ".$plugInfo["name"]; else $listname=sprintf(__('%1$s\'s import list',WYSIJA),$plugInfo["name"]); $defaultListId=$model->insert(array( "name"=>$listname, "description"=>sprintf(__('The list created automatically on import of the plugin\'s subscribers : "%1$s',WYSIJA),$plugInfo["name"]), "is_enabled"=>0)); $colsPlugin=array_keys($plugInfo["matches"]); $mktime=mktime(); $extracols=$extravals=""; if(isset($plugInfo["matchesvar"])){ $extracols=",`".implode("`,`",array_keys($plugInfo["matchesvar"]))."`"; $extravals=",".implode(",",$plugInfo["matchesvar"]); } $fields="(`".implode("`,`",$plugInfo["matches"])."`,`created_at` ".$extracols." )"; $values="`".implode("`,`",$colsPlugin)."`,".$mktime.$extravals; if($tablename=='users') { $innerjoin=''; if(!$ismainsite){ $innerjoin=' INNER JOIN '.$wpdb->base_prefix.'usermeta ON ( '.$wpdb->base_prefix.$tablename.'.ID = '.$wpdb->base_prefix.'usermeta.user_id )'; $innerjoin.=" WHERE ".$wpdb->base_prefix."usermeta.meta_key = '".$model->wpprefix."capabilities'"; } $query="INSERT IGNORE INTO `".$model->getPrefix()."user` $fields SELECT $values FROM ".$wpdb->base_prefix.$tablename.$innerjoin; }else { $where=$this->generateWhere($plugInfo); $query="INSERT IGNORE INTO `".$model->getPrefix()."user` $fields SELECT $values FROM ".$model->wpprefix.$tablename.$where; } $model->query($query); $modelU=&WYSIJA::get("user","model"); $modelU->update(array("status"=>1),array("created_at"=>$mktime)); $query="INSERT IGNORE INTO `".$model->getPrefix()."user_list` (`user_id`,`list_id`,`sub_date`) SELECT `user_id`, ".$defaultListId.", ".mktime()." FROM ".$model->getPrefix()."user WHERE created_at='".$mktime."'"; $model->query($query); $query="SELECT COUNT(user_id) as total FROM ".$model->getPrefix()."user WHERE created_at='".$mktime."'"; $result=$wpdb->get_row($query, ARRAY_A); $helperU=&WYSIJA::get("user","helper"); $helperU->refreshUsers(); $this->wp_notice(sprintf(__('%1$s users from %2$s have been imported into the new list %3$s',WYSIJA),"<strong>".$result['total']."</strong>","<strong>".$plugInfo['name']."</strong>","<strong>".$listname."</strong>")); return $defaultListId; } function generateWhere($plugInfo){ $where=" as B WHERE"; $i=0; foreach($plugInfo['where'] as $keyy => $vale){ if($i>0)$where.=' AND '; $where.=' B.'.$keyy."='".$vale."' "; $i++; } return $where; } function importWP(){ $ismainsite=true; if (is_multisite()){ global $wpdb; if($wpdb->prefix!=$wpdb->base_prefix){ $ismainsite=false; } } $infosImport=array("name"=>"WordPress", "pk"=>"ID", "matches"=>array("ID"=>"wpuser_id","user_email"=>"email","display_name"=>"firstname"), "matchesvar"=>array("status"=>1)); $tablename='users'; return $this->import($tablename,$infosImport,true,$ismainsite); } } 